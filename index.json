[{"content":"Last week, I had a lecture about the fundamentals of XML and JSON. I expected another long explanation about things I was already well acquainted with. However, I\u0026rsquo;ve learned a few things that others may find useful. Let\u0026rsquo;s talk about it! ‚òï\nWhat is XML? XML stands for Extensible Markup Language. It\u0026rsquo;s a markup language that specifies a set of rules for encoding documents in a format that is both human-readable and machine-readable. It\u0026rsquo;s in the same vein as HTML, as the name suggests. An HTML file is a valid XML file, but not the other way around. You might want to resort to use this type of files when looking for a way to store configs, transmit data or simply writing \u0026ldquo;html-like\u0026rdquo; documents. Nowadays, some might say that JSON took it\u0026rsquo;s place but I think it\u0026rsquo;s still important to know some basics which could come useful when you lease expect it. As long as technologies such as HTTP/HTTPS, RSS feeds \u0026amp; HTML exists, XML is here to stay. üòâ\nWhy validate? By doing validation we ensure our document conforms to a set of rules detailing the structure and content. Simply, we make sure it\u0026rsquo;s valid. Seems obvious right? \u0026ndash; but what is \u0026ldquo;valid\u0026rdquo;? \u0026ndash; A valid XML document must be well formed.\nIt must respect these syntax rules:\n Tags are case sensitive Elements must be properly nested Documents must have a root element Attributes values be quoted (single or double) Elements must have a closing tag eg. \u0026lt;tag\u0026gt;\u0026lt;/tag\u0026gt;  How to validate? To validate our XML document, we\u0026rsquo;ll need to create two new files. I won\u0026rsquo;t provide examples because I\u0026rsquo;m sure you can find some docs and/or tools online to help you with this task.\nFirstly, we\u0026rsquo;ll need a DTD (Document Type Definition) file. It defines the valid building blocks of our XML document and its structure with a list of validated elements \u0026amp; attributes. Secondly, we\u0026rsquo;ll need a XML schema (XSD) file. It\u0026rsquo;s a guideline from the World Wide Web Consortium (W3C) that explains how to formally define the elements in an XML document.\n Now, let\u0026rsquo;s test our XML document shall we? üßë‚Äçüî¨\nMany online resources and IDEs (eg. Eclipse) provide ways to validate. However, I\u0026rsquo;ll show you a quick \u0026amp; simple way to do it locally. We\u0026rsquo;ll need the xmllint program included with libxml library.\nIf you\u0026rsquo;re using Arch Linux, you can install the requirements with the following command:\npacman -S libxml2 Validate XML with DTD file:\nxmllint --valid --dtdvalid \u0026lt;dtd\u0026gt; --noout \u0026lt;xml\u0026gt; Validate XML with XML schema (xsd):\nxmllint --noout --schema \u0026lt;xsd\u0026gt; \u0026lt;xml\u0026gt; ","permalink":"https://jessyprovencher.xyz/posts/validating-xml/","summary":"Last week, I had a lecture about the fundamentals of XML and JSON. I expected another long explanation about things I was already well acquainted with. However, I\u0026rsquo;ve learned a few things that others may find useful. Let\u0026rsquo;s talk about it! ‚òï\nWhat is XML? XML stands for Extensible Markup Language. It\u0026rsquo;s a markup language that specifies a set of rules for encoding documents in a format that is both human-readable and machine-readable.","title":"Validating XML"}]